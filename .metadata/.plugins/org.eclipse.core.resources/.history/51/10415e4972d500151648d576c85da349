package CI346;

public class implicitConcurrency {
	private static int primeCount = 0;
	int start = 0;
	int end = 0;
	static long startTimer = 0;
	static long stopTimer = 0;
	
	public implicitConcurrency(int startValue, int endValue) {
		start = startValue;
		end = endValue;
	}

	
	public static  boolean calculatePrimes(int i) {
		
			
		
			
			if (i<2) return false;
			if (i==2) return true;
			if (i%2==0) return false;
			for (int j = 3; j < i; j += 2)
			{
				if(i%j == 0) return false;
			}
			return true;
			
			
	}
	
	public static int getCount(){
		return primeCount;
	}
	
	public static void addCount(){
		primeCount++;
	}
	
	public static void setStartTime(long currTime){
		startTimer = currTime;
	}
	
	public static void setEndTime(long currTime){
		stopTimer = currTime;
	}
}
