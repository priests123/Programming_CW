package CI346;

public class explicitConcurrency implements Runnable{
	private static int primeCount = 0;
	int start = 0;
	int end = 0;
	
	public explicitConcurrency(int startValue, int endValue) {
		start = startValue;
		end = endValue;
	}

	@Override
	public void run() {
		for (int i = start; i < end; i++) {
			boolean isPrimeNumber = true;
			if (i % 2 == 0) 
			{
				if (i == 2) 
				{
					primeCount++;
				}
			} else {
				for (int j = 3; j < i; j += 2) 
				{
					if (i % j == 0) 
					{
						isPrimeNumber = false;
						break;
					}
				}
				if (isPrimeNumber) 
				{
					primeCount++;
				}
			}
		}
		
		
		
		
		
		System.out.println(Thread.currentThread().getId() + "start  " + start);
		System.out.println(Thread.currentThread().getId() + "end  " + end);
	}
	
	public static int getCount(){
		return primeCount;
	}
	
	public static synchronized void addCount(){
		primeCount++;
	}
}
